// #define teszt
using System;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Drawing;
using System.Data;
using System.Text;
using System.Windows.Forms;
using FakPlusz;
using FakPlusz.Alapfunkciok;
using FakPlusz.Alapcontrolok;
using FakPlusz.UserAlapcontrolok;
namespace Vezir
{
    public class Bejelentkezo
    {
        private bool elso = true;
        public FakUserInterface FakUserInterface = null;
        public string Nev = "Dallos Andras";
        public string Alkalmazas = "";
        public string alkid = "";
        public bool HibasAlkalmazas = false;
        public bool NincsKezelo = false;
        public string Kezeloid = "-1";
        public string Rgazdaid = "-1";
        private string vezetoid = "";
        private string adatkezeloid = "";
        private string kiemeltkezeloid = "";
        public Ceginformaciok[] CegInformaciok = null;
        public Ceginformaciok[] AktivCegInformaciok = null;
        public Ceginformaciok AktivCegInformacio;
        public Base.KezSzint AktivKezeloiSzint;
        public string[] CegNevek = null;
        public string[] CegIdk = null;
        public Ceginformaciok[] LezartCegInformaciok = null;
        public string[] LezartCegNevek = null;
        public string[] LezartCegIdk = null;
        public string Rendszerconn = "";
        public string Userconn = "";
        public string Adatbazisfajta;
        public DataTable nyilvkodok = new DataTable();
        public DataTable lezartnyilvkodok = new DataTable();
        public DataTable userverzio = new DataTable();
        public string[] connectionstringek = null;
        public string jelszo;
        public string ujjelszo;
        public Ceginformaciok AktualCeginformacio = null;
        public string UserContnev;
        public int Parametertipus = 0;
        public string UserParamok = "";
        public int AktualCegindex;
        public bool LezartCeg = false;
        public bool LezartEv = false;
        private ArrayList cegconok = new ArrayList();
        private Tablainfo cegszerzinfo;
        private Tablainfo cegkezszerepinfo;
        private Tablainfo kezeloinfo;
        private Tablainfo rendszergazdainfo;
        private Tablainfo cegevinfo;
        private Tablainfo ceghonapokinfo;
        private Tablainfo kezalkalminfo;
        public ArrayList KezeloIdkArray = new ArrayList();
        public bool CsakEgyKezelo = false;
        public Bejelentkezo(string[] connstringek, string alkalmazas)
        {
            Bejelconstr(connstringek, "Sql", alkalmazas);
        }
        public Bejelentkezo(string[] connstringek, string adatbazisfajta, string alkalmazas)
        {
            Bejelconstr(connstringek, adatbazisfajta, alkalmazas);
        }
        private void Bejelconstr(string[] connstringek, string adatbazisfajta, string alkalmazas)
        {
            Rendszerconn = connstringek[0];
            Userconn = connstringek[1];
            connectionstringek = connstringek;
            for (int i = 2; i < connectionstringek.Length; i++)
                cegconok.Add(connectionstringek[i]);
            Adatbazisfajta = adatbazisfajta;
            Alkalmazas = alkalmazas;
            DataTable dt = new DataTable();
            Sqlinterface.RendszerUserConn(Rendszerconn, Userconn);
            Sqlinterface.Select(dt, Rendszerconn, "KODTAB", " where kodtipus='Alkalm' and szoveg='" + Alkalmazas + "'", "", false);
            if (dt.Rows.Count == 0)
                HibasAlkalmazas = true;
            else
            {
                alkid = dt.Rows[0]["SORSZAM"].ToString();
                dt.Rows.Clear();
                dt.Columns.Clear();
                Sqlinterface.Select(dt, Userconn, "KEZELOK", "", "", true);
                if (dt.Rows.Count == 0)
                    NincsKezelo = true;
                else
                {
                    dt.Rows.Clear();
                    dt.Columns.Clear();
                    Sqlinterface.Select(dt, Userconn, "OSSZEF", " where kodtipus = 'KezeloAlkalm' and sorszam2 = " + alkid, "", false);
                    for (int i = 0; i < dt.Rows.Count; i++)
                        KezeloIdkArray.Add(dt.Rows[i]["SORSZAM1"].ToString());
                }
            }
        }
        public bool Show(bool kellshow)
        {
            if (HibasAlkalmazas)
            {
                FakPlusz.MessageBox.Show("Nincs " + Alkalmazas + " nevü alkalmazás!");
                return true;
            }
            bool ok = true;

            //#if teszt
            //#else
            //            if (NincsKezelo)
            //            {
            //                FakPlusz.MessageBox.Show(" Az alkalmazáshoz nincs kezelö!");
            //                return true;
            //            }
            Form Elso = new Elso(this, kellshow);
            if (kellshow)
                ok = Elso.ShowDialog() == DialogResult.OK;
            //#endif

            if (!ok)
                return true;
            else
                return false;
        }
        public bool Bejeltolt()
        {
            int k;
            DataRow rgazdarow;
            FakUserInterface.ProgressRefresh();
            kezeloinfo = FakUserInterface.GetBySzintPluszTablanev("U", "KEZELOK");
            kezalkalminfo = FakUserInterface.GetOsszef("U", "KezeloAlkalm");
            rendszergazdainfo = FakUserInterface.GetBySzintPluszTablanev("U", "RENDSZERGAZDA");
            rendszergazdainfo.DataView.RowFilter = "ALKALMAZAS_ID = " + FakUserInterface.AlkalmazasId;
            if (KezeloIdkArray.Count == 0 && kezeloinfo.Rows.Count == 0)
            {
                DataRow row = kezeloinfo.Ujsor();
                row["SZOVEG"] = Nev;
                row["JELSZO"] = jelszo;
                FakUserInterface.Rogzit(kezeloinfo);
                Kezeloid = kezeloinfo.DataView[0].Row["KEZELO_ID"].ToString();
                row = kezalkalminfo.Ujsor();
                row["PREV_ID2"] = alkid;
                row["SORSZAM2"] = alkid;
                row["PREV_ID1"] = Kezeloid;
                row["SORSZAM1"] = Kezeloid;
                FakUserInterface.Rogzit(kezalkalminfo);
                rgazdarow = rendszergazdainfo.Ujsor();
                rgazdarow["ALKALMAZAS_ID"] = alkid;
                rgazdarow["RENDSZERGAZDA_ID"] = Kezeloid;
                FakUserInterface.Rogzit(rendszergazdainfo);
            }
            rgazdarow = rendszergazdainfo.DataView[0].Row;
            Rgazdaid = rgazdarow["RENDSZERGAZDA_ID"].ToString();
            if (Kezeloid != "-1")
            {
                DataRow row = kezeloinfo.Find("KEZELO_ID", Kezeloid);
                string oldjelszo = row["JELSZO"].ToString();
                string newjelszo = "";
                if (oldjelszo == "")
                    newjelszo = jelszo;
                else if (oldjelszo != jelszo)
                    newjelszo = ujjelszo;
                if (newjelszo != "")
                {
                    row["JELSZO"] = newjelszo;
                    kezeloinfo.Modositott = true;
                    FakUserInterface.Rogzit(kezeloinfo);
                }
            }
            CsakEgyKezelo = KezeloIdkArray.Count < 2;
            Tablainfo ceginfo = FakUserInterface.Tablainfok.GetBySzintPluszTablanev("U", "CEGEK");
            DataView cegDataView = new DataView(ceginfo.Adattabla);
            DataView lezartcegDataView = new DataView(ceginfo.Adattabla);
            cegDataView.Sort = "CEG_ID";
            string cegid;
            lezartcegDataView.Sort = "CEG_ID";
            ArrayList ceginformacioarray = new ArrayList();
            ArrayList lezartceginformacioarray = new ArrayList();
            ArrayList aktceginformacioarray = new ArrayList();
            DataRow dr;
            DateTime aktualisdatum = DateTime.MinValue;
            DateTime indulodatum = DateTime.MinValue;
            string vegedatum;
            bool lezartceg = false;
            bool lezartev = false;
            cegszerzinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZERZODES");
            ceghonapokinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZLAHONAPOK");
            cegevinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGEV");
            cegkezszerepinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGKEZELOKIOSZT");
            Tablainfo[] infok = new Tablainfo[] {cegszerzinfo,cegevinfo,ceghonapokinfo,cegkezszerepinfo};
            for (int i = 0; i < cegDataView.Count; i++)
            {
                FakUserInterface.ProgressRefresh();
                dr = cegDataView[i].Row;
                cegid = dr["CEG_ID"].ToString();
                string conn = dr["CEGCONNECTION"].ToString();
                FakUserInterface.AktualCegid = Convert.ToInt64(cegid);
                FakUserInterface.AktualCegconn = conn;
                Sqlinterface.Cegconn(conn);
                for(int j=0;j<infok.Length;j++)
                {
                    FakUserInterface.ProgressRefresh();
                    infok[j].Adattabla.Connection = conn;
                    infok[j].Adattabla.Select();
                }
                //                FakUserInterface.Cegadatok(i);
//                cegszerzinfo.Adattabla.Select();
                //                cegszerzinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZERZODES");
                cegszerzinfo.DataView.RowFilter = "CEG_ID = " + cegid + " AND " + "ALKALMAZAS_ID = " + alkid;
//                ceghonapokinfo.Adattabla.Select();
                ceghonapokinfo.OrderString = "ORDER BY CEGHONAP_ID DESC";
//                cegevinfo.Adattabla.Select();
                cegevinfo.OrderString = "ORDER BY CEGEV_ID DESC";
//                cegkezszerepinfo.Adattabla.Select();
                //              ceghonapokinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZLAHONAPOK");
                //                ceghonapokinfo.OrderString = "ORDER BY CEGHONAP_ID DESC";
                //                cegevinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGEV");
                //                cegevinfo.OrderString = "ORDER BY CEGEV_ID DESC";
                DataRow row;
                indulodatum = Convert.ToDateTime(DateTime.Today.Year.ToString() + ".01.01");
                aktualisdatum = indulodatum;
                vegedatum = "";
                {
                    if (cegszerzinfo.DataView.Count == 0)
                    {
                        FakUserInterface.ProgressRefresh();
                        row = cegszerzinfo.Ujsor();
                        row["ALKALMAZAS_ID"] = alkid;
                        row["INDULODATUM"] = indulodatum;
                        row["AKTUALISDATUM"] = indulodatum;
                        row["MODOSITOTT_M"] = "1";
                        aktualisdatum = indulodatum;
                        cegevinfo.SelectString = "";
                        cegevinfo.Adattabla.Select();
                        row = cegevinfo.Ujsor();
                        row["EV"] = indulodatum.Year.ToString();
                        row["LEZART"] = "N";
                        row["KELLZARAS"] = "N";
                        row["MODOSITOTT_M"] = "1";
                        FakUserInterface.Rogzit(cegevinfo);
                        ceghonapokinfo.SelectString = "";
                        ceghonapokinfo.Adattabla.Select();
                        row = ceghonapokinfo.Ujsor();
                        row["SZLA_DATUM"] = aktualisdatum;
                        row["CEGEV_ID"] = cegevinfo.Adattabla.Rows[0]["CEGEV_ID"];
                        row["EVHONAP"] = indulodatum.Year.ToString() + ".01";
                        row["MODOSITOTT_M"] = "1";
                    }
                    else
                    {
                        row = cegszerzinfo.DataView[0].Row;
                        indulodatum = Convert.ToDateTime(row["INDULODATUM"].ToString());
                        aktualisdatum = Convert.ToDateTime(row["AKTUALISDATUM"].ToString());
                    }
                    //                    cegkezszerepinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGKEZELOKIOSZT");
                    if (cegkezszerepinfo.DataView.Count == 0)
                    {
                        FakUserInterface.ProgressRefresh();
                        if (CsakEgyKezelo)
                        {
                            row = cegkezszerepinfo.Ujsor();
                            row["ALKALMAZAS_ID"] = alkid;
                            row["KEZELO_ID"] = Kezeloid;
                            row["SZEREPKOD"] = "7"; // kezelo
                        }
                        else
                        {

                            for (int ii = 0; ii < KezeloIdkArray.Count; ii++)
                            {

                                row = cegkezszerepinfo.Ujsor();
                                row["ALKALMAZAS_ID"] = alkid;
                                row["KEZELO_ID"] = KezeloIdkArray[ii];
                                if (KezeloIdkArray[ii].ToString() == Rgazdaid)
                                    row["SZEREPKOD"] = "10"; //semmi
                                else
                                    row["SZEREPKOD"] = "7";
                            }
                        }
                    }
                    FakUserInterface.ProgressRefresh();
                    FakUserInterface.Rogzit(new Tablainfo[] { cegszerzinfo, cegevinfo, ceghonapokinfo, cegkezszerepinfo });
                }

            }
            for (int i = 0; i < cegDataView.Count; i++)
            {
                FakUserInterface.ProgressRefresh();

                //                FakUserInterface.Cegadatok(i);

                dr = cegDataView[i].Row;
                cegid = dr["CEG_ID"].ToString();
                string conn = dr["CEGCONNECTION"].ToString();
                Sqlinterface.Cegconn(conn);
                FakUserInterface.AktualCegid = Convert.ToInt64(cegid);
                FakUserInterface.AktualCegconn = conn;
                for (int j = 0; j < infok.Length; j++)
                {
                    FakUserInterface.ProgressRefresh();
                    infok[j].Adattabla.Connection = conn;
                    infok[j].Adattabla.Select();
                }

//                cegszerzinfo.Adattabla.Select();
                //                cegszerzinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZERZODES");
                              cegszerzinfo.DataView.RowFilter = "CEG_ID = " + cegid + " AND " + "ALKALMAZAS_ID = " + alkid;
//                ceghonapokinfo.Adattabla.Select();
                ceghonapokinfo.OrderString = "ORDER BY CEGHONAP_ID DESC";
//                cegevinfo.Adattabla.Select();
                cegevinfo.OrderString = "ORDER BY CEGEV_ID DESC";
//                cegkezszerepinfo.Adattabla.Select();

                //                cegszerzinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZERZODES");
                //               cegszerzinfo.DataView.RowFilter = "CEG_ID = " + cegid + " AND " + "ALKALMAZAS_ID = " + alkid;
                //                ceghonapokinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGSZLAHONAPOK");
                //               cegevinfo = FakUserInterface.GetBySzintPluszTablanev("C", "CEGEV");
                DataRow cegevrow = cegevinfo.DataView[0].Row;
                lezartev = cegevrow["LEZART"].ToString() == "I";
                DataRow szerzrow = cegszerzinfo.DataView[0].Row;
                cegkezszerepinfo.DataView.RowFilter = "CEG_ID = " + cegid + " AND ALKALMAZAS_ID = " + alkid + " AND KEZELO_ID = " + Kezeloid;
                DataRow kezrow = cegkezszerepinfo.DataView[0].Row;
                cegkezszerepinfo.DataView.RowFilter = "";
                int szerep = Convert.ToInt16(kezrow["SZEREPKOD"].ToString());
                bool vanhozfer = CsakEgyKezelo || Kezeloid == Rgazdaid || szerep != (int)Base.KezSzint.Semmi;
                if (vanhozfer)
                {
                    adatkezeloid = "-1";
                    if (szerep == (int)Base.KezSzint.Kezelo || szerep == (int)Base.KezSzint.Kiemeltkezelopluszkezelo)
                        adatkezeloid = Kezeloid;
                    vezetoid = "-1";
                    if (szerep == (int)Base.KezSzint.Vezeto)
                        vezetoid = Kezeloid;
                    kiemeltkezeloid = "-1";
                    if (szerep == (int)Base.KezSzint.Kiemeltkezelo || szerep == (int)Base.KezSzint.Kiemeltkezelopluszkezelo)
                        kiemeltkezeloid = Kezeloid;
                    indulodatum = Convert.ToDateTime(szerzrow["INDULODATUM"].ToString());
                    ceghonapokinfo.Adattabla.Select();
                    if (ceghonapokinfo.Adattabla.Rows.Count == 0)
                        aktualisdatum = indulodatum;
                    else
                        aktualisdatum = Convert.ToDateTime(ceghonapokinfo.Adattabla.Rows[0]["SZLA_DATUM"].ToString());
                    vegedatum = szerzrow["VEGEDATUM"].ToString();
                    lezartceg = vegedatum != "" && Convert.ToDateTime(vegedatum).CompareTo(DateTime.Today) < 0;
                    k = cegDataView.Find(cegid);
                    if (!lezartceg)
                        aktceginformacioarray = ceginformacioarray;
                    else
                        aktceginformacioarray = lezartceginformacioarray;
                    //                    FakUserInterface.Cegadatok(k);
                    if (FakUserInterface.BajVan)
                        return true;
                    FakUserInterface.ProgressRefresh();
                    aktceginformacioarray.Add(Ujceginformacio(ceginfo.Adattabla.Rows[k], k, cegid, Kezeloid, Rgazdaid, indulodatum, aktualisdatum, lezartceg, lezartev));
                }
            }
            //           }

            CegInformaciok = null;
            LezartCegInformaciok = null;
            string[] userparamok = null;
            if (ceginformacioarray.Count != 0)
            {
                FakUserInterface.ProgressRefresh();
                CegNevek = new string[ceginformacioarray.Count];
                CegIdk = new string[ceginformacioarray.Count];
                userparamok = new string[ceginformacioarray.Count];
                for (int i = 0; i < ceginformacioarray.Count; i++)
                {
                    Ceginformaciok ceginf = (Ceginformaciok)ceginformacioarray[i];
                    CegNevek[i] = ceginf.CegNev;
                    CegIdk[i] = ceginf.CegId;
                    DataTable userlogtable = new DataTable("USERLOG");
                    Sqlinterface.Select(userlogtable, FakUserInterface.Userconn,"USERLOG", " where ALKALMAZAS_ID="+alkid +" AND CEG_ID= " + CegIdk[i] + " AND KEZELO_ID = " + Kezeloid, " order by LAST_MOD DESC", true);
                    if (userlogtable.Rows.Count == 0)
                        ceginf.UserLogsor = null;
                    else
                        ceginf.UserLogsor = userlogtable.Rows[0];
                }
                CegInformaciok = (Ceginformaciok[])ceginformacioarray.ToArray(typeof(Ceginformaciok));
                AktivCegInformaciok = CegInformaciok;
                //                AktualComboIndex = 0;
                AktivCegInformacio = CegInformaciok[0];
                LezartCeg = false;
            }
            if (lezartceginformacioarray.Count != 0)
            {
                FakUserInterface.ProgressRefresh();
                LezartCegNevek = new string[lezartceginformacioarray.Count];
                LezartCegIdk = new string[lezartceginformacioarray.Count];
                for (int i = 0; i < lezartceginformacioarray.Count; i++)
                {
                    LezartCegNevek[i] = ((Ceginformaciok)lezartceginformacioarray[i]).CegNev;
                    LezartCegIdk[i] = ((Ceginformaciok)lezartceginformacioarray[i]).CegId;
                }
                LezartCegInformaciok = (Ceginformaciok[])lezartceginformacioarray.ToArray(typeof(Ceginformaciok));
                if (AktivCegInformaciok == null)
                    AktivCegInformaciok = LezartCegInformaciok;
                //                AktualComboIndex = 0;
                AktivCegInformacio = LezartCegInformaciok[0];
                LezartCeg = true;
            }
            if (elso)
            {
                FakUserInterface.ProgressRefresh();
                elso = false;
                Tablainfo logtabinfo = FakUserInterface.GetBySzintPluszTablanev("U", "USERLOG");
                logtabinfo.Adattabla.Select();
                logtabinfo.DataView.RowFilter = "KEZELO_ID=" + Kezeloid + " AND ALKALMAZAS_ID =" + alkid;
                if (logtabinfo.DataView.Count != 0)
                {
                    DataRow row = logtabinfo.DataView[0].Row;
                    cegid = row["CEG_ID"].ToString();
                    UserContnev = row["USERCONTNEV"].ToString();
                    Parametertipus = Convert.ToInt16(row["PARAMETERTIPUS"].ToString());
                    UserParamok = row["USERPARAMOK"].ToString();
                }
                else
                {
                    cegid = CegInformaciok[0].CegId;
                    UserContnev = "";
                }
                logtabinfo.Adattabla.Rows.Clear();
                bool megvan = false;
                for (int i = 0; i < CegInformaciok.Length; i++)
                {
                    FakUserInterface.ProgressRefresh();
                    if (CegInformaciok[i].CegId == cegid)
                    {
                        megvan = true;
                        AktualCeginformacio = CegInformaciok[i];
                        AktualCegindex = AktualCeginformacio.Cegindex;
                        //                        AktualComboIndex = i;
                        AktivCegInformacio = AktualCeginformacio;
                        AktivCegInformaciok = CegInformaciok;
                        LezartCeg = false;
                        break;

                    }
                }
                if (!megvan)
                {
                    if (LezartCegInformaciok != null)
                    {
                        for (int i = 0; i < LezartCegInformaciok.Length; i++)
                        {
                            FakUserInterface.ProgressRefresh();
                            if (LezartCegInformaciok[i].CegId == cegid)
                            {
                                AktualCeginformacio = LezartCegInformaciok[i];
                                AktualCegindex = AktualCeginformacio.Cegindex;
                                //                                AktualComboIndex = i;
                                AktivCegInformacio = AktualCeginformacio;
                                AktivCegInformaciok = LezartCegInformaciok;
                                LezartCeg = true;
                                megvan = true;
                                break;
                            }
                        }
                    }
                }
                if (!megvan)
                {
                    UserParamok = "";
                    Parametertipus = 0;
                    AktualCeginformacio = AktivCegInformacio;
                    LezartCeg = AktivCegInformacio.LezartCeg;
                }
                logtabinfo.DataView.RowFilter = "";
            }
            //if(ceginfo.Adattabla.Rows.Count>1)
            //    FakUserInterface.Cegadatok(0);
            return false;
        }
        private Ceginformaciok Ujceginformacio(DataRow dr, int cegindex, string cegid, string kezeloid, string rgazdaid, DateTime indulodat, DateTime aktdat, bool lezartceg, bool lezartev)
        {
            Ceginformaciok egyinf = new Ceginformaciok();
            egyinf.Bejel = this;
            egyinf.LezartCeg = lezartceg;
            egyinf.LezartEv = lezartev;
            egyinf.InduloDatum = indulodat;
            egyinf.AktualisDatum = aktdat;
            egyinf.VezetoId = vezetoid;
            //           DataRow dr = cegek.Rows[i];
            egyinf.CegConnection = dr["CEGCONNECTION"].ToString();
            egyinf.CegNev = dr["SZOVEG"].ToString();
            egyinf.CegId = cegid;
            egyinf.Cegindex = cegindex;
            if (kezeloid == "-1")

                egyinf.KezeloiSzint = Base.KezSzint.Fejleszto;
            else
            {
                Tablainfo tabinfo = FakUserInterface.GetBySzintPluszTablanev("U", "KEZELOK");
                if (CsakEgyKezelo)
                    egyinf.KezeloiSzint = Base.KezSzint.Minden;
                else
                {
                    bool rgazda = rgazdaid == kezeloid;
                    bool vezeto = vezetoid == kezeloid;
                    bool kezelo = adatkezeloid == kezeloid;
                    bool kiemeltkezelo = kiemeltkezeloid == kezeloid;
                    if (kiemeltkezelo)
                    {
                        if (rgazda)
                        {
                            egyinf.KezeloiSzint = Base.KezSzint.Rendszergazdapluszkiemelt;
                            if (kezelo)
                                egyinf.KezeloiSzint = Base.KezSzint.Rendszergazdapluszkiemeltpluszkezelo;
                        }
                        else
                        {
                            egyinf.KezeloiSzint = Base.KezSzint.Kiemeltkezelo;
                            if (kezelo)
                                egyinf.KezeloiSzint = Base.KezSzint.Kiemeltkezelopluszkezelo;
                        }
                    }

                    else if (kezelo)
                    {
                        if (rgazda)
                            egyinf.KezeloiSzint = Base.KezSzint.Rendszergazdapluszkezelo;
                        else
                            egyinf.KezeloiSzint = Base.KezSzint.Kezelo;
                    }
                    else if (vezeto)
                    {
                        if (rgazda)
                            egyinf.KezeloiSzint = Base.KezSzint.Rendszergazdapluszvezeto;
                        else
                            egyinf.KezeloiSzint = Base.KezSzint.Vezeto;
                    }
                    else
                        egyinf.KezeloiSzint = Base.KezSzint.Rendszergazda;
                }
            }
            egyinf.Jogosultsagok();
            return egyinf;
        }
    }
    public class Ceginformaciok
    {
        public bool LezartCeg = false;
        public bool LezartEv = false;
        public bool KellEvzaras = false;
        public Bejelentkezo Bejel;
        public DateTime InduloDatum;
        public DateTime AktualisDatum;
        public string CegId;
        public int Cegindex;
        public string VezetoId;
        public Base.KezSzint KezeloiSzint;
        public Base.HozferJogosultsag UserJogosultsag;
        public Base.HozferJogosultsag CegSzarmazekosJogosultsag;
        public Base.HozferJogosultsag CegTermeszetesJogosultsag;
        public string CegNev;
        public string CegConnection;
        public DataRow UserLogsor;
        public Ceginformaciok()
        {
        }
        public void Jogosultsagok()
        {
            if (Bejel.NincsKezelo)
            {
                UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                return;
            }
            switch (KezeloiSzint)
            {
                case Base.KezSzint.Fejleszto:
                    UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                    CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                    CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                    break;
                case Base.KezSzint.Minden:
                    UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                    if (!LezartCeg)
                    {
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                    }
                    else
                    {
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    }
                    break;
                case Base.KezSzint.Rendszergazda:
                    UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                    if (!LezartCeg)
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                    else
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    CegTermeszetesJogosultsag = Base.HozferJogosultsag.Semmi;
                    break;
                case Base.KezSzint.Rendszergazdapluszkiemelt:
                    UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                    if (!LezartCeg)
                    {
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                    }
                    else
                    {
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    }
                    break;
                case Base.KezSzint.Rendszergazdapluszkezelo:
                    UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                    if (!LezartCeg)
                    {
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                    }
                    else
                    {
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                        CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    }
                    break;
                case Base.KezSzint.Rendszergazdapluszvezeto:
                    UserJogosultsag = Base.HozferJogosultsag.Irolvas;
                    CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    break;
                case Base.KezSzint.Kiemeltkezelo:
                    UserJogosultsag = Base.HozferJogosultsag.Semmi;
                    CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Irolvas;
                    if (!LezartCeg)
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                    else
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    break;
                case Base.KezSzint.Kezelo:
                    UserJogosultsag = Base.HozferJogosultsag.Semmi;
                    CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Semmi;
                    if (!LezartCeg)
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Irolvas;
                    else
                        CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    break;
                case Base.KezSzint.Vezeto:
                    UserJogosultsag = Base.HozferJogosultsag.Semmi;
                    CegSzarmazekosJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    CegTermeszetesJogosultsag = Base.HozferJogosultsag.Csakolvas;
                    break;

            }
        }
    }
}
